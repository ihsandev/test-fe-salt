{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f1460c138ceda7b7dfa5.hot-update.js","sources":["webpack:///./containers/organism/ChannelView/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChannelItem } from 'Components'\r\nimport { Row, Col } from 'reactstrap'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-column-gap: 1em;\r\n  grid-row-gap: 1.4rem;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  height: 600px;\r\n  box-sizing: border-box;\r\n   /* width */\r\n   ::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1; \r\n  }\r\n  \r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n  }\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 4px 0;\r\n  border-bottom: 1.5px solid #ba349f;\r\n  margin-bottom: 0.5rem;\r\n  > div {\r\n    font-size: 0.8em;\r\n    color: #ba349f;\r\n  }\r\n`\r\n\r\nclass ChannelView extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    // const urlFetch = fetch(`http://api.tvmaze.com/seasons/1/episodes`)\r\n    // urlFetch.then(res => {\r\n    //   if (res.status === 200) {\r\n    //     return res.json()\r\n    //   }\r\n    // }).then(resJson => {\r\n    //   this.setState({\r\n    //     data: resJson\r\n    //   })\r\n    // })\r\n    const urlFetch = fetch('https://api.tvmaze.com/search/shows?q=batman')\r\n\r\n    urlFetch.then(res => {\r\n      if (res.status === 200) {\r\n        return res.json()\r\n      }\r\n    }).then(resJson => {\r\n      const datum = resJson.map(item => item.show)\r\n      this.setState({\r\n        data: datum\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    console.log(this.state.data)\r\n    return (\r\n      <Col md=\"4\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Flex>\r\n              <h3>Channels</h3>\r\n              <div>Browse All Channel</div>\r\n            </Flex>\r\n          </Col>\r\n        </Row>\r\n        <Wrapper>\r\n          {\r\n            this.state.data.splice(0, 20).map((item, i) => {\r\n              return (\r\n                <ChannelItem key={i} label={item.name} image={item.image.original} />\r\n              )\r\n            })\r\n          }\r\n        </Wrapper>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChannelView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AA8BA;AACA;AAYA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAEA;AAKA;;;;AAtDA;AACA;AAwDA;;;;A","sourceRoot":""}