{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: #b560a4;\\n  display: flex;\\n  justify-content:center;\\n  justify-items: center;\\n  align-items: center;\\n  color: #fff;\\n  padding: 0 15px;\\n  font-weight: bolder;\\n  font-size: 1em;\\n  cursor: pointer;\\n  i {\\n    margin-right: 1rem;\\n    font-size: 2em;\\n    cursor: pointer;\\n  }\\n  label {\\n    cursor: pointer;\\n  }\\n  @media screen and (max-width: 600px) {\\n    label {\\n      font-size: 0.7em;\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 10px 0;\\n  > div {\\n    color: #ba349f;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-template-rows: 20vh 20vh 20vh;\\n  overflow: hidden;\\n  grid-gap: 1.1rem;\\n  .item {\\n    background-size: cover;\\n    background-repeat: no-repeat;\\n    h3 {\\n      font-size: 0.8em;\\n      padding: 0;\\n    }\\n    p {\\n      padding: 0;\\n      font-size: 0.6em;\\n    }\\n  }\\n  .item1 {\\n    grid-column: 1 / span 2;\\n    grid-row: 1 / span 2;\\n    h3 {\\n      font-size: 1.5em;\\n    }\\n    p {\\n      padding: 0;\\n      font-size: 0.8em;\\n    }\\n  }\\n  @media screen and (max-width: 600px) {\\n    .item1 {\\n        grid-column: 1 / span 3;\\n      }\\n      grid-template-rows: 20vh 20vh 20vh 20vh;\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styled from 'styled-components';\nimport { VideosNews, Icon } from 'Components';\nimport fetch from 'isomorphic-unfetch';\nvar Grid = styled.div(_templateObject());\nvar Flex = styled.div(_templateObject2());\nvar More = styled.div(_templateObject3());\n\nvar MainVideosView = function MainVideosView(_ref) {\n  var batman = _ref.batman,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      moreIcon = _ref.moreIcon,\n      moreLabel = _ref.moreLabel;\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    setData(batman);\n  }, [batman]);\n  console.log(data); // constructor() {\n  //   super()\n  //   this.state = {\n  //     data: []\n  //   }\n  // }\n  // componentDidMount() {\n  //   const urlFetch = fetch('https://api.tvmaze.com/search/shows?q=batman')\n  //   urlFetch.then(res => {\n  //     if (res.status === 200) {\n  //       return res.json()\n  //     }\n  //   }).then(resJson => {\n  //     const datum = resJson.map(item => item.show)\n  //     this.setState({\n  //       data: datum\n  //     })\n  //   })\n  // }\n  // render() {\n\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(Col, {\n    md: \"8\"\n  }, __jsx(Flex, null, __jsx(\"h3\", null, title), __jsx(\"div\", null, subtitle)))), __jsx(Row, null, __jsx(Col, {\n    md: \"12\"\n  }, __jsx(Grid, null, data.splice(0, 5).map(function (item, i) {\n    return __jsx(VideosNews, {\n      title: item.name,\n      name: item.genres,\n      views: item.language,\n      key: i,\n      classname: i === 0 ? 'item item1' : 'item',\n      image: item.image.original\n    });\n  }), __jsx(More, null, __jsx(Icon, {\n    name: moreIcon\n  }), __jsx(\"label\", null, moreLabel))))));\n}; // }\n\n\nexport default MainVideosView;","map":{"version":3,"sources":["D:\\IHSAN\\TES\\salt-test-project\\containers\\organism\\mainVideosView\\index.jsx"],"names":["React","useEffect","useState","Row","Col","styled","VideosNews","Icon","fetch","Grid","div","Flex","More","MainVideosView","batman","title","subtitle","moreIcon","moreLabel","data","setData","console","log","splice","map","item","i","name","genres","language","image","original"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,IAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAV,mBAAV;AAoCA,IAAMC,IAAI,GAAGN,MAAM,CAACK,GAAV,oBAAV;AASA,IAAME,IAAI,GAAGP,MAAM,CAACK,GAAV,oBAAV;;AA0BA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,OAAsD;AAAA,MAAnDC,MAAmD,QAAnDA,MAAmD;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACnDhB,QAAQ,CAAC,EAAD,CAD2C;AAAA,MACpEiB,IADoE;AAAA,MAC9DC,OAD8D;;AAE3EnB,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,OAAO,CAACN,MAAD,CAAP;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAGAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAL2E,CAM3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACE,4BACE,MAAC,GAAD,QACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC;AAAR,KACE,MAAC,IAAD,QACE,kBAAKJ,KAAL,CADF,EAEE,mBAAMC,QAAN,CAFF,CADF,CADF,CADF,EASE,MAAC,GAAD,QACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC;AAAR,KACE,MAAC,IAAD,QAEIG,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAOC,CAAP,EAAa;AACjC,WACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAED,IAAI,CAACE,IAAxB;AAA8B,MAAA,IAAI,EAAEF,IAAI,CAACG,MAAzC;AAAiD,MAAA,KAAK,EAAEH,IAAI,CAACI,QAA7D;AAAuE,MAAA,GAAG,EAAEH,CAA5E;AAA+E,MAAA,SAAS,EAAEA,CAAC,KAAK,CAAN,GAAU,YAAV,GAAyB,MAAnH;AAA2H,MAAA,KAAK,EAAED,IAAI,CAACK,KAAL,CAAWC;AAA7I,MADF;AAGD,GAJD,CAFJ,EAQE,MAAC,IAAD,QACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEd;AAAZ,IADF,EAEE,qBAAQC,SAAR,CAFF,CARF,CADF,CADF,CATF,CADF;AA6BD,CAxDD,C,CAyDA;;;AAEA,eAAeL,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { VideosNews, Icon } from 'Components'\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: 20vh 20vh 20vh;\r\n  overflow: hidden;\r\n  grid-gap: 1.1rem;\r\n  .item {\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    h3 {\r\n      font-size: 0.8em;\r\n      padding: 0;\r\n    }\r\n    p {\r\n      padding: 0;\r\n      font-size: 0.6em;\r\n    }\r\n  }\r\n  .item1 {\r\n    grid-column: 1 / span 2;\r\n    grid-row: 1 / span 2;\r\n    h3 {\r\n      font-size: 1.5em;\r\n    }\r\n    p {\r\n      padding: 0;\r\n      font-size: 0.8em;\r\n    }\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    .item1 {\r\n        grid-column: 1 / span 3;\r\n      }\r\n      grid-template-rows: 20vh 20vh 20vh 20vh;\r\n    }\r\n  `\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 0;\r\n  > div {\r\n    color: #ba349f;\r\n  }\r\n`\r\nconst More = styled.div`\r\n  background-color: #b560a4;\r\n  display: flex;\r\n  justify-content:center;\r\n  justify-items: center;\r\n  align-items: center;\r\n  color: #fff;\r\n  padding: 0 15px;\r\n  font-weight: bolder;\r\n  font-size: 1em;\r\n  cursor: pointer;\r\n  i {\r\n    margin-right: 1rem;\r\n    font-size: 2em;\r\n    cursor: pointer;\r\n  }\r\n  label {\r\n    cursor: pointer;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    label {\r\n      font-size: 0.7em;\r\n    }\r\n  }\r\n`\r\n\r\nconst MainVideosView = ({ batman, title, subtitle, moreIcon, moreLabel }) => {\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    setData(batman)\r\n  }, [batman])\r\n  console.log(data)\r\n  // constructor() {\r\n  //   super()\r\n  //   this.state = {\r\n  //     data: []\r\n  //   }\r\n  // }\r\n  // componentDidMount() {\r\n  //   const urlFetch = fetch('https://api.tvmaze.com/search/shows?q=batman')\r\n\r\n  //   urlFetch.then(res => {\r\n  //     if (res.status === 200) {\r\n  //       return res.json()\r\n  //     }\r\n  //   }).then(resJson => {\r\n  //     const datum = resJson.map(item => item.show)\r\n  //     this.setState({\r\n  //       data: datum\r\n  //     })\r\n  //   })\r\n  // }\r\n  // render() {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <Flex>\r\n            <h3>{title}</h3>\r\n            <div>{subtitle}</div>\r\n          </Flex>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <Grid>\r\n            {\r\n              data.splice(0, 5).map((item, i) => {\r\n                return (\r\n                  <VideosNews title={item.name} name={item.genres} views={item.language} key={i} classname={i === 0 ? 'item item1' : 'item'} image={item.image.original} />\r\n                )\r\n              })\r\n            }\r\n            <More>\r\n              <Icon name={moreIcon} />\r\n              <label>{moreLabel}</label>\r\n            </More>\r\n          </Grid>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n// }\r\n\r\nexport default MainVideosView"]},"metadata":{},"sourceType":"module"}