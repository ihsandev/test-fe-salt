{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 4px 0;\\n  border-bottom: 1.5px solid #ba349f;\\n  margin-bottom: 0.5rem;\\n  > div {\\n    font-size: 0.8em;\\n    color: #ba349f;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  grid-column-gap: 1em;\\n  grid-row-gap: 1.4rem;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  height: 600px;\\n  box-sizing: border-box;\\n   /* width */\\n   ::-webkit-scrollbar {\\n    width: 4px;\\n  }\\n\\n  /* Track */\\n  ::-webkit-scrollbar-track {\\n    background: #f1f1f1; \\n  }\\n  \\n  /* Handle */\\n  ::-webkit-scrollbar-thumb {\\n    background: #888; \\n  }\\n\\n  /* Handle on hover */\\n  ::-webkit-scrollbar-thumb:hover {\\n    background: #555; \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { ChannelItem } from 'Components';\nimport { Row, Col } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\nvar Wrapper = styled.div(_templateObject());\nvar Flex = styled.div(_templateObject2());\n\nvar ChannelView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChannelView, _Component);\n\n  function ChannelView() {\n    var _this;\n\n    _classCallCheck(this, ChannelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChannelView).call(this));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(ChannelView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var urlFetch = fetch(\"http://api.tvmaze.com/seasons/1/episodes\");\n      urlFetch.then(function (res) {\n        if (res.status === 200) {\n          return res.json();\n        }\n      }).then(function (resJson) {\n        _this2.setState({\n          data: resJson\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.data);\n      return __jsx(Col, {\n        md: \"4\"\n      }, __jsx(Row, null, __jsx(Col, {\n        md: \"12\"\n      }, __jsx(Flex, null, __jsx(\"h3\", null, \"Channels\"), __jsx(\"div\", null, \"Browse All Channel\")))), __jsx(Wrapper, null, this.state.data.splice(0, 20).map(function (item, i) {\n        return __jsx(ChannelItem, {\n          key: i,\n          label: item.name,\n          image: item.image.original\n        });\n      })));\n    }\n  }]);\n\n  return ChannelView;\n}(Component);\n\nexport default ChannelView;","map":{"version":3,"sources":["D:\\IHSAN\\TES\\salt-test-project\\containers\\organism\\ChannelView\\index.jsx"],"names":["React","Component","styled","ChannelItem","Row","Col","fetch","Wrapper","div","Flex","ChannelView","state","data","urlFetch","then","res","status","json","resJson","setState","console","log","splice","map","item","i","name","image","original"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,OAAO,GAAGL,MAAM,CAACM,GAAV,mBAAb;AA8BA,IAAMC,IAAI,GAAGP,MAAM,CAACM,GAAV,oBAAV;;IAaME,W;;;;;AACJ,yBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFY;AAKb;;;;wCACmB;AAAA;;AAClB,UAAMC,QAAQ,GAAGP,KAAK,4CAAtB;AACAO,MAAAA,QAAQ,CAACC,IAAT,CAAc,UAAAC,GAAG,EAAI;AACnB,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,iBAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,OAJD,EAIGH,IAJH,CAIQ,UAAAI,OAAO,EAAI;AACjB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,IAAI,EAAEM;AADM,SAAd;AAGD,OARD;AASD;;;6BACQ;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,IAAvB;AACA,aACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC;AAAR,SACE,MAAC,GAAD,QACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC;AAAR,SACE,MAAC,IAAD,QACE,6BADF,EAEE,wCAFF,CADF,CADF,CADF,EASE,MAAC,OAAD,QAEI,KAAKD,KAAL,CAAWC,IAAX,CAAgBU,MAAhB,CAAuB,CAAvB,EAA0B,EAA1B,EAA8BC,GAA9B,CAAkC,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC7C,eACE,MAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,CAAlB;AAAqB,UAAA,KAAK,EAAED,IAAI,CAACE,IAAjC;AAAuC,UAAA,KAAK,EAAEF,IAAI,CAACG,KAAL,CAAWC;AAAzD,UADF;AAGD,OAJD,CAFJ,CATF,CADF;AAqBD;;;;EA1CuB3B,S;;AA6C1B,eAAeS,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChannelItem } from 'Components'\r\nimport { Row, Col } from 'reactstrap'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-column-gap: 1em;\r\n  grid-row-gap: 1.4rem;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  height: 600px;\r\n  box-sizing: border-box;\r\n   /* width */\r\n   ::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1; \r\n  }\r\n  \r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n  }\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 4px 0;\r\n  border-bottom: 1.5px solid #ba349f;\r\n  margin-bottom: 0.5rem;\r\n  > div {\r\n    font-size: 0.8em;\r\n    color: #ba349f;\r\n  }\r\n`\r\n\r\nclass ChannelView extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const urlFetch = fetch(`http://api.tvmaze.com/seasons/1/episodes`)\r\n    urlFetch.then(res => {\r\n      if (res.status === 200) {\r\n        return res.json()\r\n      }\r\n    }).then(resJson => {\r\n      this.setState({\r\n        data: resJson\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    console.log(this.state.data)\r\n    return (\r\n      <Col md=\"4\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Flex>\r\n              <h3>Channels</h3>\r\n              <div>Browse All Channel</div>\r\n            </Flex>\r\n          </Col>\r\n        </Row>\r\n        <Wrapper>\r\n          {\r\n            this.state.data.splice(0, 20).map((item, i) => {\r\n              return (\r\n                <ChannelItem key={i} label={item.name} image={item.image.original} />\r\n              )\r\n            })\r\n          }\r\n        </Wrapper>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChannelView"]},"metadata":{},"sourceType":"module"}