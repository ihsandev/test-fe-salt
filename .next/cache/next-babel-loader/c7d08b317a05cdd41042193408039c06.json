{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 4px 0;\\n  border-bottom: 1.5px solid #ba349f;\\n  margin-bottom: 0.5rem;\\n  > div {\\n    font-size: 0.8em;\\n    color: #ba349f;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  grid-column-gap: 1em;\\n  grid-row-gap: 1.4rem;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  height: 600px;\\n  box-sizing: border-box;\\n   /* width */\\n   ::-webkit-scrollbar {\\n    width: 4px;\\n  }\\n\\n  /* Track */\\n  ::-webkit-scrollbar-track {\\n    background: #f1f1f1; \\n  }\\n  \\n  /* Handle */\\n  ::-webkit-scrollbar-thumb {\\n    background: #888; \\n  }\\n\\n  /* Handle on hover */\\n  ::-webkit-scrollbar-thumb:hover {\\n    background: #555; \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { ChannelItem } from 'Components';\nimport { Row, Col } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\nvar Wrapper = styled.div(_templateObject());\nvar Flex = styled.div(_templateObject2());\n\nvar ChannelView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChannelView, _Component);\n\n  function ChannelView() {\n    var _this;\n\n    _classCallCheck(this, ChannelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChannelView).call(this));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(ChannelView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var urlFetch = fetch(\"http://api.tvmaze.com/seasons/1/episodes\");\n      urlFetch.then(function (res) {\n        if (res.status === 200) {\n          return res.json();\n        }\n      }).then(function (resJson) {\n        _this2.setState({\n          data: resJson\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.data);\n      return __jsx(Col, {\n        md: \"4\"\n      }, __jsx(Row, null, __jsx(Col, {\n        md: \"12\"\n      }, __jsx(Flex, null, __jsx(\"h3\", null, \"Channels\"), __jsx(\"div\", null, \"Browse All Channel\")))), __jsx(Wrapper, null, this.state.data.splice(0, 20).map(function (item, i) {\n        return __jsx(ChannelItem, {\n          key: i,\n          label: item.name,\n          image: item.image.original\n        });\n      })));\n    }\n  }]);\n\n  return ChannelView;\n}(Component);\n\nexport default ChannelView;","map":null,"metadata":{},"sourceType":"module"}